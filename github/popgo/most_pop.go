package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"time"
)

func check(e error) {
	if e != nil {
		log.Fatal(e)
	}
}

func main() {
	start := time.Now()
	u := customURL() //Function created to split the url allowing easy customation.
	client := &http.Client{}
	req, err := http.NewRequest("GET", u.String(), nil) //Creating request.
	check(err)
	req.Header = customHeader() // Function to split the header allowing easy customization.
	res, err := client.Do(req)  // At this point the request object is: *(1) (look below)
	check(err)                  // At this point the response object is: *(2)
	data, err := ioutil.ReadAll(res.Body)
	check(err)
	fmt.Println(string(data))
	defer res.Body.Close()
	defer fmt.Println("Task executed in: ", time.Since(start))
}

/* ========================================= *
 * *(1) ==> Beginning of Request Object. (1) *
 * ========================================= *
&http.Request{
  Method: "GET",
  URL:    &url.URL{
    Scheme:   "https",
    Opaque:   "",
    User:     (*url.Userinfo)(nil),
    Host:     "api.github.com",
    Path:     "/search/repositories",
    RawPath:  "",
    RawQuery: "q=language:go&sort=stars&order=desc",
    Fragment: "",
  },
  Proto:      "HTTP/1.1",
  ProtoMajor: 1,
  ProtoMinor: 1,
  Header:     {
    "User-Agent": []string{
      "Holberton_School",
    },
    "Authorization": []string{
      "token 6a54def2525aa32b003337b31487e321d6a2bb59",
    },
  },
  Body:             nil,
  ContentLength:    0,
  TransferEncoding: []string{},
  Close:            false,
  Host:             "api.github.com",
  Form:             url.Values{},
  PostForm:         url.Values{},
  MultipartForm:    (*multipart.Form)(nil),
  Trailer:          http.Header{},
  RemoteAddr:       "",
  RequestURI:       "",
  TLS:              (*tls.ConnectionState)(nil),
  Cancel:           (<-chan struct {})(0x0),
} ==>> End of Request Object  <<<<<== */

/* ========================================= *
 * *(2) ==> Beginning of Response Object.(2) *
 * ========================================= *
&http.Response{
  Status:     "200 OK",
  StatusCode: 200,
  Proto:      "HTTP/1.1",
  ProtoMajor: 1,
  ProtoMinor: 1,
  Header:     {
    "Access-Control-Allow-Origin": []string{
      "*",
    },
    "X-Ratelimit-Limit": []string{
      "30",
    },
    "X-Oauth-Scopes": []string{
      "",
    },
    "Server": []string{
      "GitHub.com",
    },
    "X-Accepted-Oauth-Scopes": []string{
      "repo",
    },
    "Status": []string{
      "200 OK",
    },
    "X-Ratelimit-Reset": []string{
      "1462375206",
    },
    "X-Github-Media-Type": []string{
      "github.v3; format=json",
    },
    "Link": []string{
      "<https://api.github.com/search/repositories?q=language%3Ago&sort=stars&order=desc&page=2>; rel=\"next\", <https://api.github.com/search/repositories?q=language%3Ago&sort=stars&order=desc&page=34>; rel=\"last\"",
    },
    "Content-Security-Policy": []string{
      "default-src 'none'",
    },
    "X-Frame-Options": []string{
      "deny",
    },
    "Content-Type": []string{
      "application/json; charset=utf-8",
    },
    "X-Xss-Protection": []string{
      "1; mode=block",
    },
    "X-Served-By": []string{
      "b0ef53392caa42315c6206737946d931",
    },
    "Cache-Control": []string{
      "no-cache",
    },
    "Access-Control-Expose-Headers": []string{
      "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
    },
    "Strict-Transport-Security": []string{
      "max-age=31536000; includeSubdomains; preload",
    },
    "X-Content-Type-Options": []string{
      "nosniff",
    },
    "Vary": []string{
      "Accept-Encoding",
    },
    "X-Github-Request-Id": []string{
      "B1BDE269:2CBC:1212408:572A12E9",
    },
    "Date": []string{
      "Wed, 04 May 2016 15:19:06 GMT",
    },
    "X-Ratelimit-Remaining": []string{
      "29",
    },
  },
  Body: &http.bodyEOFSignal{  <<<< res.Body starts here <<<<<<<
    body: &http.gzipReader{
      body: &http.body{
        src: &internal.chunkedReader{
          r: &bufio.Reader{
            buf: []uint8{...},
            rd:  http.noteEOFReader{
              r: &tls.Conn{
                conn: &net.TCPConn{
                  conn: net.conn{
                    fd: &net.netFD{
                      fdmu: net.fdMutex{
                        state: 0x0000000000000000,
                        rsema: 0x00000000,
                        wsema: 0x00000000,
                      },
                      sysfd:       3,
                      family:      2,
                      sotype:      1,
                      isConnected: true,
                      net:         "tcp",
                      laddr:       &net.TCPAddr{
                        IP: net.IP{
                          0xc0, 0xa8, 0x01, 0x1f,
                        },
                        Port: 51179,
                        Zone: "",
                      },
                      raddr: &net.TCPAddr{
                        IP: net.IP{
                          0xc0, 0x1e, 0xfc, 0x7e,
                        },
                        Port: 443,
                        Zone: "",
                      },
                      pd: net.pollDesc{
                        runtimeCtx: 0x6b85a8,
                      },
                    },
                  },
                },
                isClient:       true,
                handshakeMutex: sync.Mutex{
                  state: 0,
                  sema:  0x00000000,
                },
                handshakeErr: nil,
                vers:         0x0303,
                haveVers:     true,
                config:       &tls.Config{
                  Rand:                     nil,
                  Time:                     func() time.Time {...},
                  Certificates:             []tls.Certificate{},
                  NameToCertificate:        map[string]*tls.Certificate{},
                  GetCertificate:           func(*tls.ClientHelloInfo) (*tls.Certificate, error) {...},
                  RootCAs:                  (*x509.CertPool)(nil),
                  NextProtos:               []string{},
                  ServerName:               "api.github.com",
                  ClientAuth:               0,
                  ClientCAs:                (*x509.CertPool)(nil),
                  InsecureSkipVerify:       false,
                  CipherSuites:             []uint16{},
                  PreferServerCipherSuites: false,
                  SessionTicketsDisabled:   false,
                  SessionTicketKey:         [32]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  },
                  ClientSessionCache: nil,
                  MinVersion:         0x0000,
                  MaxVersion:         0x0000,
                  CurvePreferences:   []tls.CurveID{},
                  serverInitOnce:     sync.Once{
                    m: sync.Mutex{
                      state: 0,
                      sema:  0x00000000,
                    },
                    done: 0x00000000,
                  },
                  mutex: sync.RWMutex{
                    w: sync.Mutex{
                      state: 0,
                      sema:  0x00000000,
                    },
                    writerSem:   0x00000000,
                    readerSem:   0x00000000,
                    readerCount: 0,
                    readerWait:  0,
                  },
                  sessionTicketKeys: []tls.ticketKey{},
                },
                handshakeComplete: true,
                didResume:         false,
                cipherSuite:       0xc02f,
                ocspResponse:      []uint8{},
                scts:              [][]uint8{},
                peerCertificates:  []*x509.Certificate{
                  &x509.Certificate{
                    Raw:                     []uint8{...},
                    RawTBSCertificate:       []uint8{...},
                    RawSubjectPublicKeyInfo: []uint8{
                      0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
                      0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
                      0x00, 0xde, 0xe9, 0xda, 0x4c, 0xff, 0x02, 0x5d, 0xe2, 0xbb, 0x8b, 0xe4, 0x4e, 0x10, 0x8f, 0xf8,
                      0x2b, 0xf9, 0xff, 0xf1, 0x64, 0x90, 0xc3, 0x22, 0xb0, 0x80, 0x81, 0x8c, 0x8b, 0xb4, 0x15, 0xcb,
                      0x56, 0x76, 0x74, 0x19, 0xe1, 0x31, 0xbb, 0x9b, 0xa5, 0x8c, 0x2d, 0xd7, 0xff, 0x4f, 0x2f, 0xa6,
                      0x2d, 0x5f, 0xe1, 0x12, 0x45, 0x79, 0x9b, 0x06, 0x26, 0x23, 0xcb, 0xdc, 0xfd, 0x16, 0x6b, 0xaf,
                      0x92, 0xf8, 0xb1, 0x87, 0x5d, 0x9a, 0x0a, 0x57, 0x27, 0xf1, 0x9c, 0x16, 0x69, 0xde, 0x31, 0xe3,
                      0xbb, 0xa0, 0xea, 0x41, 0xe4, 0x54, 0xeb, 0x98, 0x33, 0x70, 0x39, 0xd6, 0x00, 0xda, 0xf2, 0x54,
                      0x8b, 0x84, 0xf8, 0x4f, 0x49, 0x3e, 0xf5, 0xae, 0xc7, 0x0a, 0xef, 0xf6, 0x76, 0xae, 0x63, 0x64,
                      0x34, 0xac, 0x7d, 0xf7, 0xec, 0xd5, 0x60, 0x9b, 0x5f, 0x64, 0x91, 0xda, 0x4c, 0x9a, 0x7e, 0xad,
                      0xd6, 0xa4, 0xb8, 0x9a, 0xa0, 0x39, 0xeb, 0xb8, 0xc8, 0x1f, 0x83, 0xac, 0x20, 0xd8, 0xf3, 0x28,
                      0x39, 0x73, 0x46, 0x6b, 0x56, 0x80, 0x48, 0x04, 0x6b, 0x0f, 0x52, 0xa3, 0x57, 0x8d, 0xb8, 0x71,
                      0x5d, 0x1f, 0xac, 0x60, 0x30, 0x6c, 0xa0, 0x9d, 0xec, 0x46, 0xc8, 0x29, 0x89, 0x8c, 0xf6, 0x67,
                      0x5f, 0xd5, 0xbc, 0x66, 0x53, 0x03, 0xe5, 0x56, 0xf4, 0xb9, 0x7f, 0x78, 0xf3, 0x9a, 0x95, 0x14,
                      0x46, 0xf5, 0x6e, 0x25, 0x61, 0x13, 0xf3, 0xa4, 0x74, 0x24, 0xb5, 0x1e, 0x41, 0x18, 0xe2, 0x61,
                      0x9f, 0x4c, 0x63, 0xe3, 0x04, 0x17, 0x8c, 0x36, 0xe0, 0xfc, 0xc3, 0xe8, 0x7e, 0x9a, 0x25, 0xa2,
                      0xda, 0x0c, 0x53, 0xaa, 0x43, 0xc2, 0xc2, 0xcf, 0xb5, 0x3b, 0xbd, 0xf7, 0xce, 0xa3, 0xfe, 0xd6,
                      0x82, 0xb7, 0x01, 0x80, 0x8a, 0xe8, 0xc2, 0x8b, 0x6f, 0x9a, 0xc1, 0x2f, 0x78, 0x4f, 0x2b, 0xb6,
                      0x49, 0x02, 0x03, 0x01, 0x00, 0x01,
                    },
                    RawSubject: []uint8{
                      0x30, 0x68, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                      0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66, 0x6f,
                      0x72, 0x6e, 0x69, 0x61, 0x31, 0x16, 0x30, 0x14, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x0d, 0x53,
                      0x61, 0x6e, 0x20, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x31, 0x15, 0x30, 0x13,
                      0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x2c, 0x20, 0x49,
                      0x6e, 0x63, 0x2e, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x0c, 0x2a, 0x2e,
                      0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
                    },
                    RawIssuer: []uint8{
                      0x30, 0x70, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                      0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                      0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                      0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                      0x6d, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x26, 0x44, 0x69, 0x67, 0x69,
                      0x43, 0x65, 0x72, 0x74, 0x20, 0x53, 0x48, 0x41, 0x32, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41,
                      0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20,
                      0x43, 0x41,
                    },
                    Signature: []uint8{
                      0x17, 0xd8, 0xf6, 0x7d, 0xbc, 0x66, 0x40, 0xae, 0x1a, 0x70, 0xca, 0x0d, 0x79, 0x64, 0x24, 0x82,
                      0xc8, 0xb7, 0x3b, 0x8a, 0xa9, 0x16, 0xfe, 0x51, 0xe3, 0xde, 0xad, 0xe3, 0xaf, 0xea, 0x10, 0xe9,
                      0x99, 0x54, 0xbb, 0xa4, 0x0b, 0xfe, 0x05, 0x2c, 0x07, 0x98, 0xdf, 0x5d, 0x4b, 0xd4, 0xa0, 0xbb,
                      0xa4, 0x5c, 0x1f, 0xc7, 0x08, 0x27, 0x5d, 0xe3, 0x5a, 0xdb, 0x33, 0xbb, 0x3e, 0x80, 0xb5, 0x85,
                      0x29, 0xa6, 0x8f, 0xa5, 0xc7, 0x4b, 0xd1, 0xd6, 0x4b, 0x99, 0xc4, 0xf6, 0x47, 0xcb, 0xe3, 0xcf,
                      0x75, 0x5d, 0xb0, 0x34, 0xac, 0x22, 0x81, 0x5c, 0x7b, 0xff, 0x40, 0x6e, 0xdd, 0x4e, 0xce, 0x39,
                      0xe1, 0xa1, 0x2a, 0xae, 0x94, 0x40, 0x32, 0x09, 0xb4, 0x1c, 0x83, 0x25, 0x9d, 0x8c, 0x87, 0x1b,
                      0xac, 0x2e, 0xfe, 0xfb, 0xcc, 0x47, 0x51, 0x3c, 0xed, 0x34, 0x43, 0x10, 0x56, 0xcc, 0x4b, 0xf5,
                      0xc9, 0x60, 0x5e, 0x26, 0x7b, 0x1c, 0x2c, 0xa1, 0xa8, 0xa1, 0xd5, 0xb2, 0xb8, 0x65, 0x5a, 0x80,
                      0x97, 0x80, 0x94, 0x1f, 0x0a, 0xa7, 0x04, 0x3d, 0xd7, 0xaa, 0xee, 0xcb, 0xf0, 0x89, 0x65, 0xce,
                      0xef, 0xa5, 0x79, 0xbb, 0x9d, 0xac, 0xd7, 0x9b, 0xcc, 0xf7, 0x38, 0xa2, 0xbc, 0x7c, 0x58, 0x10,
                      0x08, 0x41, 0xf4, 0xc5, 0x83, 0xda, 0xf2, 0x3d, 0x4e, 0x12, 0xb1, 0x46, 0x18, 0x95, 0xa8, 0x7b,
                      0x4a, 0x03, 0xe0, 0xd9, 0x04, 0x41, 0x65, 0xd7, 0x60, 0x34, 0x90, 0xa8, 0x11, 0x73, 0x7a, 0x02,
                      0x34, 0x77, 0xff, 0x7f, 0x0a, 0x7f, 0x4a, 0x14, 0x68, 0x23, 0x0b, 0xd9, 0x02, 0x6a, 0x19, 0xf9,
                      0x66, 0x1b, 0xdf, 0x11, 0x26, 0xdc, 0x38, 0xbc, 0xd4, 0xc0, 0x78, 0x38, 0x7d, 0x81, 0x87, 0x52,
                      0x42, 0x5e, 0x3e, 0x32, 0x2f, 0x42, 0x6f, 0x3f, 0x66, 0xc3, 0xd6, 0x91, 0x83, 0x17, 0xf3, 0xe4,
                    },
                    SignatureAlgorithm: 4,
                    PublicKeyAlgorithm: 1,
                    PublicKey:          &rsa.PublicKey{
                      N: &big.Int{
                        neg: false,
                        abs: big.nat{
                          0x9ac12f784f2bb649,
                          0xb701808ae8c28b6f,
                          0x3bbdf7cea3fed682,
                          0xc53aa43c2c2cfb5,
                          0xfcc3e87e9a25a2da,
                          0x4c63e304178c36e0,
                          0x24b51e4118e2619f,
                          0xf56e256113f3a474,
                          0xb97f78f39a951446,
                          0xd5bc665303e556f4,
                          0x46c829898cf6675f,
                          0x1fac60306ca09dec,
                          0xf52a3578db8715d,
                          0x73466b568048046b,
                          0x1f83ac20d8f32839,
                          0xa4b89aa039ebb8c8,
                          0x6491da4c9a7eadd6,
                          0xac7df7ecd5609b5f,
                          0xaeff676ae636434,
                          0x84f84f493ef5aec7,
                          0x7039d600daf2548b,
                          0xa0ea41e454eb9833,
                          0xf19c1669de31e3bb,
                          0xf8b1875d9a0a5727,
                          0x23cbdcfd166baf92,
                          0x5fe11245799b0626,
                          0x8c2dd7ff4f2fa62d,
                          0x767419e131bb9ba5,
                          0x80818c8bb415cb56,
                          0xf9fff16490c322b0,
                          0xbb8be44e108ff82b,
                          0xdee9da4cff025de2,
                        },
                      },
                      E: 65537,
                    },
                    Version:      3,
                    SerialNumber: &big.Int{
                      neg: false,
                      abs: big.nat{
                        0xbc86d5cfcd503bef,
                        0xd7042396302c626,
                      },
                    },
                    Issuer: pkix.Name{
                      Country: []string{
                        "US",
                      },
                      Organization: []string{
                        "DigiCert Inc",
                      },
                      OrganizationalUnit: []string{
                        "www.digicert.com",
                      },
                      Locality:      []string{},
                      Province:      []string{},
                      StreetAddress: []string{},
                      PostalCode:    []string{},
                      SerialNumber:  "",
                      CommonName:    "DigiCert SHA2 High Assurance Server CA",
                      Names:         []pkix.AttributeTypeAndValue{
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            6,
                          },
                          Value: "US",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            10,
                          },
                          Value: "DigiCert Inc",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            11,
                          },
                          Value: "www.digicert.com",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            3,
                          },
                          Value: "DigiCert SHA2 High Assurance Server CA",
                        },
                      },
                      ExtraNames: []pkix.AttributeTypeAndValue{},
                    },
                    Subject: pkix.Name{
                      Country: []string{
                        "US",
                      },
                      Organization: []string{
                        "GitHub, Inc.",
                      },
                      OrganizationalUnit: []string{},
                      Locality:           []string{
                        "San Francisco",
                      },
                      Province: []string{
                        "California",
                      },
                      StreetAddress: []string{},
                      PostalCode:    []string{},
                      SerialNumber:  "",
                      CommonName:    "*.github.com",
                      Names:         []pkix.AttributeTypeAndValue{
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            6,
                          },
                          Value: "US",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            8,
                          },
                          Value: "California",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            7,
                          },
                          Value: "San Francisco",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            10,
                          },
                          Value: "GitHub, Inc.",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            3,
                          },
                          Value: "*.github.com",
                        },
                      },
                      ExtraNames: []pkix.AttributeTypeAndValue{},
                    },
                    NotBefore:  (unexported time.Time),
                    NotAfter:   (unexported time.Time),
                    KeyUsage:   5,
                    Extensions: []pkix.Extension{
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          35,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x16, 0x80, 0x14, 0x51, 0x68, 0xff, 0x90, 0xaf, 0x02, 0x07, 0x75, 0x3c, 0xcc, 0xd9, 0x65,
                          0x64, 0x62, 0xa2, 0x12, 0xb8, 0x59, 0x72, 0x3b,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          14,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x04, 0x14, 0x1e, 0x5b, 0xad, 0x21, 0x7a, 0xd4, 0x56, 0x03, 0x91, 0x68, 0xb5, 0x06, 0x25, 0xf5,
                          0x97, 0xe3, 0x49, 0x7a, 0x0c, 0x2a,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          17,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x1a, 0x82, 0x0c, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
                          0x82, 0x0a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          15,
                        },
                        Critical: true,
                        Value:    []uint8{
                          0x03, 0x02, 0x05, 0xa0,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          37,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x14, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x01, 0x06, 0x08, 0x2b, 0x06,
                          0x01, 0x05, 0x05, 0x07, 0x03, 0x02,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          31,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x6c, 0x30, 0x34, 0xa0, 0x32, 0xa0, 0x30, 0x86, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
                          0x2f, 0x63, 0x72, 0x6c, 0x33, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63,
                          0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x32, 0x2d, 0x68, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65,
                          0x72, 0x2d, 0x67, 0x31, 0x2e, 0x63, 0x72, 0x6c, 0x30, 0x34, 0xa0, 0x32, 0xa0, 0x30, 0x86, 0x2e,
                          0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x63, 0x72, 0x6c, 0x34, 0x2e, 0x64, 0x69, 0x67, 0x69,
                          0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x32, 0x2d, 0x68, 0x61,
                          0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x67, 0x31, 0x2e, 0x63, 0x72, 0x6c,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          32,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x39, 0x30, 0x37, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x86, 0xfd, 0x6c, 0x01, 0x01, 0x30,
                          0x2a, 0x30, 0x28, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x02, 0x01, 0x16, 0x1c, 0x68,
                          0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63,
                          0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x50, 0x53,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          1,
                          3,
                          6,
                          1,
                          5,
                          5,
                          7,
                          1,
                          1,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x75, 0x30, 0x24, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x30, 0x01, 0x86, 0x18,
                          0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x6f, 0x63, 0x73, 0x70, 0x2e, 0x64, 0x69, 0x67, 0x69,
                          0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x30, 0x4d, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05,
                          0x05, 0x07, 0x30, 0x02, 0x86, 0x41, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x63, 0x61, 0x63,
                          0x65, 0x72, 0x74, 0x73, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                          0x6d, 0x2f, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x53, 0x48, 0x41, 0x32, 0x48, 0x69,
                          0x67, 0x68, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
                          0x72, 0x43, 0x41, 0x2e, 0x63, 0x72, 0x74,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          19,
                        },
                        Critical: true,
                        Value:    []uint8{
                          0x30, 0x00,
                        },
                      },
                    },
                    ExtraExtensions:             []pkix.Extension{},
                    UnhandledCriticalExtensions: []asn1.ObjectIdentifier{},
                    ExtKeyUsage:                 []x509.ExtKeyUsage{
                      1,
                      2,
                    },
                    UnknownExtKeyUsage:    []asn1.ObjectIdentifier{},
                    BasicConstraintsValid: true,
                    IsCA:                  false,
                    MaxPathLen:            -1,
                    MaxPathLenZero:        false,
                    SubjectKeyId:          []uint8{
                      0x1e, 0x5b, 0xad, 0x21, 0x7a, 0xd4, 0x56, 0x03, 0x91, 0x68, 0xb5, 0x06, 0x25, 0xf5, 0x97, 0xe3,
                      0x49, 0x7a, 0x0c, 0x2a,
                    },
                    AuthorityKeyId: []uint8{
                      0x51, 0x68, 0xff, 0x90, 0xaf, 0x02, 0x07, 0x75, 0x3c, 0xcc, 0xd9, 0x65, 0x64, 0x62, 0xa2, 0x12,
                      0xb8, 0x59, 0x72, 0x3b,
                    },
                    OCSPServer: []string{
                      "http://ocsp.digicert.com",
                    },
                    IssuingCertificateURL: []string{
                      "http://cacerts.digicert.com/DigiCertSHA2HighAssuranceServerCA.crt",
                    },
                    DNSNames: []string{
                      "*.github.com",
                      "github.com",
                    },
                    EmailAddresses:              []string{},
                    IPAddresses:                 []net.IP{},
                    PermittedDNSDomainsCritical: false,
                    PermittedDNSDomains:         []string{},
                    CRLDistributionPoints:       []string{
                      "http://crl3.digicert.com/sha2-ha-server-g1.crl",
                      "http://crl4.digicert.com/sha2-ha-server-g1.crl",
                    },
                    PolicyIdentifiers: []asn1.ObjectIdentifier{
                      asn1.ObjectIdentifier{
                        2,
                        16,
                        840,
                        1,
                        114412,
                        1,
                        1,
                      },
                    },
                  },
                  &x509.Certificate{
                    Raw:               []uint8{...},
                    RawTBSCertificate: []uint8{
                      0x30, 0x82, 0x03, 0x99, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x04, 0xe1, 0xe7, 0xa4, 0xdc,
                      0x5c, 0xf2, 0xf3, 0x6d, 0xc0, 0x2b, 0x42, 0xb8, 0x5d, 0x15, 0x9f, 0x30, 0x0d, 0x06, 0x09, 0x2a,
                      0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09,
                      0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55,
                      0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x49, 0x6e, 0x63,
                      0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77, 0x77, 0x77, 0x2e, 0x64,
                      0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06,
                      0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x48,
                      0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x56,
                      0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x33, 0x31, 0x30,
                      0x32, 0x32, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x17, 0x0d, 0x32, 0x38, 0x31, 0x30, 0x32,
                      0x32, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x70, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03,
                      0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a,
                      0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19,
                      0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67,
                      0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55,
                      0x04, 0x03, 0x13, 0x26, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x53, 0x48, 0x41,
                      0x32, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65,
                      0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x43, 0x41, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d,
                      0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01,
                      0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xb6, 0xe0, 0x2f, 0xc2, 0x24,
                      0x06, 0xc8, 0x6d, 0x04, 0x5f, 0xd7, 0xef, 0x0a, 0x64, 0x06, 0xb2, 0x7d, 0x22, 0x26, 0x65, 0x16,
                      0xae, 0x42, 0x40, 0x9b, 0xce, 0xdc, 0x9f, 0x9f, 0x76, 0x07, 0x3e, 0xc3, 0x30, 0x55, 0x87, 0x19,
                      0xb9, 0x4f, 0x94, 0x0e, 0x5a, 0x94, 0x1f, 0x55, 0x56, 0xb4, 0xc2, 0x02, 0x2a, 0xaf, 0xd0, 0x98,
                      0xee, 0x0b, 0x40, 0xd7, 0xc4, 0xd0, 0x3b, 0x72, 0xc8, 0x14, 0x9e, 0xef, 0x90, 0xb1, 0x11, 0xa9,
                      0xae, 0xd2, 0xc8, 0xb8, 0x43, 0x3a, 0xd9, 0x0b, 0x0b, 0xd5, 0xd5, 0x95, 0xf5, 0x40, 0xaf, 0xc8,
                      0x1d, 0xed, 0x4d, 0x9c, 0x5f, 0x57, 0xb7, 0x86, 0x50, 0x68, 0x99, 0xf5, 0x8a, 0xda, 0xd2, 0xc7,
                      0x05, 0x1f, 0xa8, 0x97, 0xc9, 0xdc, 0xa4, 0xb1, 0x82, 0x84, 0x2d, 0xc6, 0xad, 0xa5, 0x9c, 0xc7,
                      0x19, 0x82, 0xa6, 0x85, 0x0f, 0x5e, 0x44, 0x58, 0x2a, 0x37, 0x8f, 0xfd, 0x35, 0xf1, 0x0b, 0x08,
                      0x27, 0x32, 0x5a, 0xf5, 0xbb, 0x8b, 0x9e, 0xa4, 0xbd, 0x51, 0xd0, 0x27, 0xe2, 0xdd, 0x3b, 0x42,
                      0x33, 0xa3, 0x05, 0x28, 0xc4, 0xbb, 0x28, 0xcc, 0x9a, 0xac, 0x2b, 0x23, 0x0d, 0x78, 0xc6, 0x7b,
                      0xe6, 0x5e, 0x71, 0xb7, 0x4a, 0x3e, 0x08, 0xfb, 0x81, 0xb7, 0x16, 0x16, 0xa1, 0x9d, 0x23, 0x12,
                      0x4d, 0xe5, 0xd7, 0x92, 0x08, 0xac, 0x75, 0xa4, 0x9c, 0xba, 0xcd, 0x17, 0xb2, 0x1e, 0x44, 0x35,
                      0x65, 0x7f, 0x53, 0x25, 0x39, 0xd1, 0x1c, 0x0a, 0x9a, 0x63, 0x1b, 0x19, 0x92, 0x74, 0x68, 0x0a,
                      0x37, 0xc2, 0xc2, 0x52, 0x48, 0xcb, 0x39, 0x5a, 0xa2, 0xb6, 0xe1, 0x5d, 0xc1, 0xdd, 0xa0, 0x20,
                      0xb8, 0x21, 0xa2, 0x93, 0x26, 0x6f, 0x14, 0x4a, 0x21, 0x41, 0xc7, 0xed, 0x6d, 0x9b, 0xf2, 0x48,
                      0x2f, 0xf3, 0x03, 0xf5, 0xa2, 0x68, 0x92, 0x53, 0x2f, 0x5e, 0xe3, 0x02, 0x03, 0x01, 0x00, 0x01,
                      0xa3, 0x82, 0x01, 0x49, 0x30, 0x82, 0x01, 0x45, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01,
                      0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03,
                      0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x1d, 0x06, 0x03,
                      0x55, 0x1d, 0x25, 0x04, 0x16, 0x30, 0x14, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03,
                      0x01, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x02, 0x30, 0x34, 0x06, 0x08, 0x2b,
                      0x06, 0x01, 0x05, 0x05, 0x07, 0x01, 0x01, 0x04, 0x28, 0x30, 0x26, 0x30, 0x24, 0x06, 0x08, 0x2b,
                      0x06, 0x01, 0x05, 0x05, 0x07, 0x30, 0x01, 0x86, 0x18, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
                      0x6f, 0x63, 0x73, 0x70, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                      0x6d, 0x30, 0x4b, 0x06, 0x03, 0x55, 0x1d, 0x1f, 0x04, 0x44, 0x30, 0x42, 0x30, 0x40, 0xa0, 0x3e,
                      0xa0, 0x3c, 0x86, 0x3a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x63, 0x72, 0x6c, 0x34, 0x2e,
                      0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x69, 0x67,
                      0x69, 0x43, 0x65, 0x72, 0x74, 0x48, 0x69, 0x67, 0x68, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e,
                      0x63, 0x65, 0x45, 0x56, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x41, 0x2e, 0x63, 0x72, 0x6c, 0x30, 0x3d,
                      0x06, 0x03, 0x55, 0x1d, 0x20, 0x04, 0x36, 0x30, 0x34, 0x30, 0x32, 0x06, 0x04, 0x55, 0x1d, 0x20,
                      0x00, 0x30, 0x2a, 0x30, 0x28, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x02, 0x01, 0x16,
                      0x1c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67,
                      0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x50, 0x53, 0x30, 0x1d, 0x06,
                      0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x51, 0x68, 0xff, 0x90, 0xaf, 0x02, 0x07, 0x75,
                      0x3c, 0xcc, 0xd9, 0x65, 0x64, 0x62, 0xa2, 0x12, 0xb8, 0x59, 0x72, 0x3b, 0x30, 0x1f, 0x06, 0x03,
                      0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf,
                      0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef, 0x63, 0x64, 0x2b, 0xc3,
                    },
                    RawSubjectPublicKeyInfo: []uint8{
                      0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
                      0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
                      0x00, 0xb6, 0xe0, 0x2f, 0xc2, 0x24, 0x06, 0xc8, 0x6d, 0x04, 0x5f, 0xd7, 0xef, 0x0a, 0x64, 0x06,
                      0xb2, 0x7d, 0x22, 0x26, 0x65, 0x16, 0xae, 0x42, 0x40, 0x9b, 0xce, 0xdc, 0x9f, 0x9f, 0x76, 0x07,
                      0x3e, 0xc3, 0x30, 0x55, 0x87, 0x19, 0xb9, 0x4f, 0x94, 0x0e, 0x5a, 0x94, 0x1f, 0x55, 0x56, 0xb4,
                      0xc2, 0x02, 0x2a, 0xaf, 0xd0, 0x98, 0xee, 0x0b, 0x40, 0xd7, 0xc4, 0xd0, 0x3b, 0x72, 0xc8, 0x14,
                      0x9e, 0xef, 0x90, 0xb1, 0x11, 0xa9, 0xae, 0xd2, 0xc8, 0xb8, 0x43, 0x3a, 0xd9, 0x0b, 0x0b, 0xd5,
                      0xd5, 0x95, 0xf5, 0x40, 0xaf, 0xc8, 0x1d, 0xed, 0x4d, 0x9c, 0x5f, 0x57, 0xb7, 0x86, 0x50, 0x68,
                      0x99, 0xf5, 0x8a, 0xda, 0xd2, 0xc7, 0x05, 0x1f, 0xa8, 0x97, 0xc9, 0xdc, 0xa4, 0xb1, 0x82, 0x84,
                      0x2d, 0xc6, 0xad, 0xa5, 0x9c, 0xc7, 0x19, 0x82, 0xa6, 0x85, 0x0f, 0x5e, 0x44, 0x58, 0x2a, 0x37,
                      0x8f, 0xfd, 0x35, 0xf1, 0x0b, 0x08, 0x27, 0x32, 0x5a, 0xf5, 0xbb, 0x8b, 0x9e, 0xa4, 0xbd, 0x51,
                      0xd0, 0x27, 0xe2, 0xdd, 0x3b, 0x42, 0x33, 0xa3, 0x05, 0x28, 0xc4, 0xbb, 0x28, 0xcc, 0x9a, 0xac,
                      0x2b, 0x23, 0x0d, 0x78, 0xc6, 0x7b, 0xe6, 0x5e, 0x71, 0xb7, 0x4a, 0x3e, 0x08, 0xfb, 0x81, 0xb7,
                      0x16, 0x16, 0xa1, 0x9d, 0x23, 0x12, 0x4d, 0xe5, 0xd7, 0x92, 0x08, 0xac, 0x75, 0xa4, 0x9c, 0xba,
                      0xcd, 0x17, 0xb2, 0x1e, 0x44, 0x35, 0x65, 0x7f, 0x53, 0x25, 0x39, 0xd1, 0x1c, 0x0a, 0x9a, 0x63,
                      0x1b, 0x19, 0x92, 0x74, 0x68, 0x0a, 0x37, 0xc2, 0xc2, 0x52, 0x48, 0xcb, 0x39, 0x5a, 0xa2, 0xb6,
                      0xe1, 0x5d, 0xc1, 0xdd, 0xa0, 0x20, 0xb8, 0x21, 0xa2, 0x93, 0x26, 0x6f, 0x14, 0x4a, 0x21, 0x41,
                      0xc7, 0xed, 0x6d, 0x9b, 0xf2, 0x48, 0x2f, 0xf3, 0x03, 0xf5, 0xa2, 0x68, 0x92, 0x53, 0x2f, 0x5e,
                      0xe3, 0x02, 0x03, 0x01, 0x00, 0x01,
                    },
                    RawSubject: []uint8{
                      0x30, 0x70, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                      0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                      0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                      0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                      0x6d, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x26, 0x44, 0x69, 0x67, 0x69,
                      0x43, 0x65, 0x72, 0x74, 0x20, 0x53, 0x48, 0x41, 0x32, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41,
                      0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20,
                      0x43, 0x41,
                    },
                    RawIssuer: []uint8{
                      0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                      0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                      0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                      0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                      0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69,
                      0x43, 0x65, 0x72, 0x74, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61,
                      0x6e, 0x63, 0x65, 0x20, 0x45, 0x56, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41,
                    },
                    Signature: []uint8{
                      0x18, 0x8a, 0x95, 0x89, 0x03, 0xe6, 0x6d, 0xdf, 0x5c, 0xfc, 0x1d, 0x68, 0xea, 0x4a, 0x8f, 0x83,
                      0xd6, 0x51, 0x2f, 0x8d, 0x6b, 0x44, 0x16, 0x9e, 0xac, 0x63, 0xf5, 0xd2, 0x6e, 0x6c, 0x84, 0x99,
                      0x8b, 0xaa, 0x81, 0x71, 0x84, 0x5b, 0xed, 0x34, 0x4e, 0xb0, 0xb7, 0x79, 0x92, 0x29, 0xcc, 0x2d,
                      0x80, 0x6a, 0xf0, 0x8e, 0x20, 0xe1, 0x79, 0xa4, 0xfe, 0x03, 0x47, 0x13, 0xea, 0xf5, 0x86, 0xca,
                      0x59, 0x71, 0x7d, 0xf4, 0x04, 0x96, 0x6b, 0xd3, 0x59, 0x58, 0x3d, 0xfe, 0xd3, 0x31, 0x25, 0x5c,
                      0x18, 0x38, 0x84, 0xa3, 0xe6, 0x9f, 0x82, 0xfd, 0x8c, 0x5b, 0x98, 0x31, 0x4e, 0xcd, 0x78, 0x9e,
                      0x1a, 0xfd, 0x85, 0xcb, 0x49, 0xaa, 0xf2, 0x27, 0x8b, 0x99, 0x72, 0xfc, 0x3e, 0xaa, 0xd5, 0x41,
                      0x0b, 0xda, 0xd5, 0x36, 0xa1, 0xbf, 0x1c, 0x6e, 0x47, 0x49, 0x7f, 0x5e, 0xd9, 0x48, 0x7c, 0x03,
                      0xd9, 0xfd, 0x8b, 0x49, 0xa0, 0x98, 0x26, 0x42, 0x40, 0xeb, 0xd6, 0x92, 0x11, 0xa4, 0x64, 0x0a,
                      0x57, 0x54, 0xc4, 0xf5, 0x1d, 0xd6, 0x02, 0x5e, 0x6b, 0xac, 0xee, 0xc4, 0x80, 0x9a, 0x12, 0x72,
                      0xfa, 0x56, 0x93, 0xd7, 0xff, 0xbf, 0x30, 0x85, 0x06, 0x30, 0xbf, 0x0b, 0x7f, 0x4e, 0xff, 0x57,
                      0x05, 0x9d, 0x24, 0xed, 0x85, 0xc3, 0x2b, 0xfb, 0xa6, 0x75, 0xa8, 0xac, 0x2d, 0x16, 0xef, 0x7d,
                      0x79, 0x27, 0xb2, 0xeb, 0xc2, 0x9d, 0x0b, 0x07, 0xea, 0xaa, 0x85, 0xd3, 0x01, 0xa3, 0x20, 0x28,
                      0x41, 0x59, 0x43, 0x28, 0xd2, 0x81, 0xe3, 0xaa, 0xf6, 0xec, 0x7b, 0x3b, 0x77, 0xb6, 0x40, 0x62,
                      0x80, 0x05, 0x41, 0x45, 0x01, 0xef, 0x17, 0x06, 0x3e, 0xde, 0xc0, 0x33, 0x9b, 0x67, 0xd3, 0x61,
                      0x2e, 0x72, 0x87, 0xe4, 0x69, 0xfc, 0x12, 0x00, 0x57, 0x40, 0x1e, 0x70, 0xf5, 0x1e, 0xc9, 0xb4,
                    },
                    SignatureAlgorithm: 4,
                    PublicKeyAlgorithm: 1,
                    PublicKey:          &rsa.PublicKey{
                      N: &big.Int{
                        neg: false,
                        abs: big.nat{
                          0xf5a26892532f5ee3,
                          0xed6d9bf2482ff303,
                          0x93266f144a2141c7,
                          0x5dc1dda020b821a2,
                          0x5248cb395aa2b6e1,
                          0x199274680a37c2c2,
                          0x2539d11c0a9a631b,
                          0x17b21e4435657f53,
                          0x9208ac75a49cbacd,
                          0x16a19d23124de5d7,
                          0xb74a3e08fb81b716,
                          0x230d78c67be65e71,
                          0x28c4bb28cc9aac2b,
                          0x27e2dd3b4233a305,
                          0xf5bb8b9ea4bd51d0,
                          0xfd35f10b0827325a,
                          0x850f5e44582a378f,
                          0xc6ada59cc71982a6,
                          0x97c9dca4b182842d,
                          0xf58adad2c7051fa8,
                          0x9c5f57b786506899,
                          0x95f540afc81ded4d,
                          0xb8433ad90b0bd5d5,
                          0xef90b111a9aed2c8,
                          0xd7c4d03b72c8149e,
                          0x22aafd098ee0b40,
                          0xe5a941f5556b4c2,
                          0xc330558719b94f94,
                          0x9bcedc9f9f76073e,
                          0x7d22266516ae4240,
                          0x45fd7ef0a6406b2,
                          0xb6e02fc22406c86d,
                        },
                      },
                      E: 65537,
                    },
                    Version:      3,
                    SerialNumber: &big.Int{
                      neg: false,
                      abs: big.nat{
                        0x6dc02b42b85d159f,
                        0x4e1e7a4dc5cf2f3,
                      },
                    },
                    Issuer: pkix.Name{
                      Country: []string{
                        "US",
                      },
                      Organization: []string{
                        "DigiCert Inc",
                      },
                      OrganizationalUnit: []string{
                        "www.digicert.com",
                      },
                      Locality:      []string{},
                      Province:      []string{},
                      StreetAddress: []string{},
                      PostalCode:    []string{},
                      SerialNumber:  "",
                      CommonName:    "DigiCert High Assurance EV Root CA",
                      Names:         []pkix.AttributeTypeAndValue{
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            6,
                          },
                          Value: "US",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            10,
                          },
                          Value: "DigiCert Inc",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            11,
                          },
                          Value: "www.digicert.com",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            3,
                          },
                          Value: "DigiCert High Assurance EV Root CA",
                        },
                      },
                      ExtraNames: []pkix.AttributeTypeAndValue{},
                    },
                    Subject: pkix.Name{
                      Country: []string{
                        "US",
                      },
                      Organization: []string{
                        "DigiCert Inc",
                      },
                      OrganizationalUnit: []string{
                        "www.digicert.com",
                      },
                      Locality:      []string{},
                      Province:      []string{},
                      StreetAddress: []string{},
                      PostalCode:    []string{},
                      SerialNumber:  "",
                      CommonName:    "DigiCert SHA2 High Assurance Server CA",
                      Names:         []pkix.AttributeTypeAndValue{
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            6,
                          },
                          Value: "US",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            10,
                          },
                          Value: "DigiCert Inc",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            11,
                          },
                          Value: "www.digicert.com",
                        },
                        pkix.AttributeTypeAndValue{
                          Type: asn1.ObjectIdentifier{
                            2,
                            5,
                            4,
                            3,
                          },
                          Value: "DigiCert SHA2 High Assurance Server CA",
                        },
                      },
                      ExtraNames: []pkix.AttributeTypeAndValue{},
                    },
                    NotBefore:  (unexported time.Time),
                    NotAfter:   (unexported time.Time),
                    KeyUsage:   97,
                    Extensions: []pkix.Extension{
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          19,
                        },
                        Critical: true,
                        Value:    []uint8{
                          0x30, 0x06, 0x01, 0x01, 0xff, 0x02, 0x01, 0x00,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          15,
                        },
                        Critical: true,
                        Value:    []uint8{
                          0x03, 0x02, 0x01, 0x86,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          37,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x14, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x01, 0x06, 0x08, 0x2b, 0x06,
                          0x01, 0x05, 0x05, 0x07, 0x03, 0x02,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          1,
                          3,
                          6,
                          1,
                          5,
                          5,
                          7,
                          1,
                          1,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x26, 0x30, 0x24, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x30, 0x01, 0x86, 0x18,
                          0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x6f, 0x63, 0x73, 0x70, 0x2e, 0x64, 0x69, 0x67, 0x69,
                          0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          31,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x42, 0x30, 0x40, 0xa0, 0x3e, 0xa0, 0x3c, 0x86, 0x3a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
                          0x2f, 0x63, 0x72, 0x6c, 0x34, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63,
                          0x6f, 0x6d, 0x2f, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x48, 0x69, 0x67, 0x68, 0x41,
                          0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x56, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x41,
                          0x2e, 0x63, 0x72, 0x6c,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          32,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x34, 0x30, 0x32, 0x06, 0x04, 0x55, 0x1d, 0x20, 0x00, 0x30, 0x2a, 0x30, 0x28, 0x06, 0x08,
                          0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x02, 0x01, 0x16, 0x1c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
                          0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63,
                          0x6f, 0x6d, 0x2f, 0x43, 0x50, 0x53,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          14,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x04, 0x14, 0x51, 0x68, 0xff, 0x90, 0xaf, 0x02, 0x07, 0x75, 0x3c, 0xcc, 0xd9, 0x65, 0x64, 0x62,
                          0xa2, 0x12, 0xb8, 0x59, 0x72, 0x3b,
                        },
                      },
                      pkix.Extension{
                        Id: asn1.ObjectIdentifier{
                          2,
                          5,
                          29,
                          35,
                        },
                        Critical: false,
                        Value:    []uint8{
                          0x30, 0x16, 0x80, 0x14, 0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26,
                          0x1a, 0x08, 0x02, 0xef, 0x63, 0x64, 0x2b, 0xc3,
                        },
                      },
                    },
                    ExtraExtensions:             []pkix.Extension{},
                    UnhandledCriticalExtensions: []asn1.ObjectIdentifier{},
                    ExtKeyUsage:                 []x509.ExtKeyUsage{
                      1,
                      2,
                    },
                    UnknownExtKeyUsage:    []asn1.ObjectIdentifier{},
                    BasicConstraintsValid: true,
                    IsCA:                  true,
                    MaxPathLen:            0,
                    MaxPathLenZero:        true,
                    SubjectKeyId:          []uint8{
                      0x51, 0x68, 0xff, 0x90, 0xaf, 0x02, 0x07, 0x75, 0x3c, 0xcc, 0xd9, 0x65, 0x64, 0x62, 0xa2, 0x12,
                      0xb8, 0x59, 0x72, 0x3b,
                    },
                    AuthorityKeyId: []uint8{
                      0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef,
                      0x63, 0x64, 0x2b, 0xc3,
                    },
                    OCSPServer: []string{
                      "http://ocsp.digicert.com",
                    },
                    IssuingCertificateURL:       []string{},
                    DNSNames:                    []string{},
                    EmailAddresses:              []string{},
                    IPAddresses:                 []net.IP{},
                    PermittedDNSDomainsCritical: false,
                    PermittedDNSDomains:         []string{},
                    CRLDistributionPoints:       []string{
                      "http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl",
                    },
                    PolicyIdentifiers: []asn1.ObjectIdentifier{
                      asn1.ObjectIdentifier{
                        2,
                        5,
                        29,
                        32,
                        0,
                      },
                    },
                  },
                },
                verifiedChains: [][]*x509.Certificate{
                  []*x509.Certificate{
                    &x509.Certificate{...},
                    &x509.Certificate{...},
                    &x509.Certificate{
                      Raw: []uint8{
                        0x30, 0x82, 0x03, 0xc5, 0x30, 0x82, 0x02, 0xad, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x02,
                        0xac, 0x5c, 0x26, 0x6a, 0x0b, 0x40, 0x9b, 0x8f, 0x0b, 0x79, 0xf2, 0xae, 0x46, 0x25, 0x77, 0x30,
                        0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x6c,
                        0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30,
                        0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74,
                        0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77,
                        0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31,
                        0x2b, 0x30, 0x29, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                        0x72, 0x74, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63,
                        0x65, 0x20, 0x45, 0x56, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d,
                        0x30, 0x36, 0x31, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x17, 0x0d, 0x33,
                        0x31, 0x31, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x6c, 0x31, 0x0b,
                        0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30, 0x13, 0x06,
                        0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x49,
                        0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77, 0x77, 0x77,
                        0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x2b, 0x30,
                        0x29, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74,
                        0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20,
                        0x45, 0x56, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d,
                        0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01,
                        0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xc6, 0xcc, 0xe5, 0x73, 0xe6,
                        0xfb, 0xd4, 0xbb, 0xe5, 0x2d, 0x2d, 0x32, 0xa6, 0xdf, 0xe5, 0x81, 0x3f, 0xc9, 0xcd, 0x25, 0x49,
                        0xb6, 0x71, 0x2a, 0xc3, 0xd5, 0x94, 0x34, 0x67, 0xa2, 0x0a, 0x1c, 0xb0, 0x5f, 0x69, 0xa6, 0x40,
                        0xb1, 0xc4, 0xb7, 0xb2, 0x8f, 0xd0, 0x98, 0xa4, 0xa9, 0x41, 0x59, 0x3a, 0xd3, 0xdc, 0x94, 0xd6,
                        0x3c, 0xdb, 0x74, 0x38, 0xa4, 0x4a, 0xcc, 0x4d, 0x25, 0x82, 0xf7, 0x4a, 0xa5, 0x53, 0x12, 0x38,
                        0xee, 0xf3, 0x49, 0x6d, 0x71, 0x91, 0x7e, 0x63, 0xb6, 0xab, 0xa6, 0x5f, 0xc3, 0xa4, 0x84, 0xf8,
                        0x4f, 0x62, 0x51, 0xbe, 0xf8, 0xc5, 0xec, 0xdb, 0x38, 0x92, 0xe3, 0x06, 0xe5, 0x08, 0x91, 0x0c,
                        0xc4, 0x28, 0x41, 0x55, 0xfb, 0xcb, 0x5a, 0x89, 0x15, 0x7e, 0x71, 0xe8, 0x35, 0xbf, 0x4d, 0x72,
                        0x09, 0x3d, 0xbe, 0x3a, 0x38, 0x50, 0x5b, 0x77, 0x31, 0x1b, 0x8d, 0xb3, 0xc7, 0x24, 0x45, 0x9a,
                        0xa7, 0xac, 0x6d, 0x00, 0x14, 0x5a, 0x04, 0xb7, 0xba, 0x13, 0xeb, 0x51, 0x0a, 0x98, 0x41, 0x41,
                        0x22, 0x4e, 0x65, 0x61, 0x87, 0x81, 0x41, 0x50, 0xa6, 0x79, 0x5c, 0x89, 0xde, 0x19, 0x4a, 0x57,
                        0xd5, 0x2e, 0xe6, 0x5d, 0x1c, 0x53, 0x2c, 0x7e, 0x98, 0xcd, 0x1a, 0x06, 0x16, 0xa4, 0x68, 0x73,
                        0xd0, 0x34, 0x04, 0x13, 0x5c, 0xa1, 0x71, 0xd3, 0x5a, 0x7c, 0x55, 0xdb, 0x5e, 0x64, 0xe1, 0x37,
                        0x87, 0x30, 0x56, 0x04, 0xe5, 0x11, 0xb4, 0x29, 0x80, 0x12, 0xf1, 0x79, 0x39, 0x88, 0xa2, 0x02,
                        0x11, 0x7c, 0x27, 0x66, 0xb7, 0x88, 0xb7, 0x78, 0xf2, 0xca, 0x0a, 0xa8, 0x38, 0xab, 0x0a, 0x64,
                        0xc2, 0xbf, 0x66, 0x5d, 0x95, 0x84, 0xc1, 0xa1, 0x25, 0x1e, 0x87, 0x5d, 0x1a, 0x50, 0x0b, 0x20,
                        0x12, 0xcc, 0x41, 0xbb, 0x6e, 0x0b, 0x51, 0x38, 0xb8, 0x4b, 0xcb, 0x02, 0x03, 0x01, 0x00, 0x01,
                        0xa3, 0x63, 0x30, 0x61, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04,
                        0x03, 0x02, 0x01, 0x86, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05,
                        0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14,
                        0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef,
                        0x63, 0x64, 0x2b, 0xc3, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80,
                        0x14, 0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02,
                        0xef, 0x63, 0x64, 0x2b, 0xc3, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01,
                        0x01, 0x05, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x1c, 0x1a, 0x06, 0x97, 0xdc, 0xd7, 0x9c,
                        0x9f, 0x3c, 0x88, 0x66, 0x06, 0x08, 0x57, 0x21, 0xdb, 0x21, 0x47, 0xf8, 0x2a, 0x67, 0xaa, 0xbf,
                        0x18, 0x32, 0x76, 0x40, 0x10, 0x57, 0xc1, 0x8a, 0xf3, 0x7a, 0xd9, 0x11, 0x65, 0x8e, 0x35, 0xfa,
                        0x9e, 0xfc, 0x45, 0xb5, 0x9e, 0xd9, 0x4c, 0x31, 0x4b, 0xb8, 0x91, 0xe8, 0x43, 0x2c, 0x8e, 0xb3,
                        0x78, 0xce, 0xdb, 0xe3, 0x53, 0x79, 0x71, 0xd6, 0xe5, 0x21, 0x94, 0x01, 0xda, 0x55, 0x87, 0x9a,
                        0x24, 0x64, 0xf6, 0x8a, 0x66, 0xcc, 0xde, 0x9c, 0x37, 0xcd, 0xa8, 0x34, 0xb1, 0x69, 0x9b, 0x23,
                        0xc8, 0x9e, 0x78, 0x22, 0x2b, 0x70, 0x43, 0xe3, 0x55, 0x47, 0x31, 0x61, 0x19, 0xef, 0x58, 0xc5,
                        0x85, 0x2f, 0x4e, 0x30, 0xf6, 0xa0, 0x31, 0x16, 0x23, 0xc8, 0xe7, 0xe2, 0x65, 0x16, 0x33, 0xcb,
                        0xbf, 0x1a, 0x1b, 0xa0, 0x3d, 0xf8, 0xca, 0x5e, 0x8b, 0x31, 0x8b, 0x60, 0x08, 0x89, 0x2d, 0x0c,
                        0x06, 0x5c, 0x52, 0xb7, 0xc4, 0xf9, 0x0a, 0x98, 0xd1, 0x15, 0x5f, 0x9f, 0x12, 0xbe, 0x7c, 0x36,
                        0x63, 0x38, 0xbd, 0x44, 0xa4, 0x7f, 0xe4, 0x26, 0x2b, 0x0a, 0xc4, 0x97, 0x69, 0x0d, 0xe9, 0x8c,
                        0xe2, 0xc0, 0x10, 0x57, 0xb8, 0xc8, 0x76, 0x12, 0x91, 0x55, 0xf2, 0x48, 0x69, 0xd8, 0xbc, 0x2a,
                        0x02, 0x5b, 0x0f, 0x44, 0xd4, 0x20, 0x31, 0xdb, 0xf4, 0xba, 0x70, 0x26, 0x5d, 0x90, 0x60, 0x9e,
                        0xbc, 0x4b, 0x17, 0x09, 0x2f, 0xb4, 0xcb, 0x1e, 0x43, 0x68, 0xc9, 0x07, 0x27, 0xc1, 0xd2, 0x5c,
                        0xf7, 0xea, 0x21, 0xb9, 0x68, 0x12, 0x9c, 0x3c, 0x9c, 0xbf, 0x9e, 0xfc, 0x80, 0x5c, 0x9b, 0x63,
                        0xcd, 0xec, 0x47, 0xaa, 0x25, 0x27, 0x67, 0xa0, 0x37, 0xf3, 0x00, 0x82, 0x7d, 0x54, 0xd7, 0xa9,
                        0xf8, 0xe9, 0x2e, 0x13, 0xa3, 0x77, 0xe8, 0x1f, 0x4a,
                      },
                      RawTBSCertificate: []uint8{
                        0x30, 0x82, 0x02, 0xad, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x02, 0xac, 0x5c, 0x26, 0x6a,
                        0x0b, 0x40, 0x9b, 0x8f, 0x0b, 0x79, 0xf2, 0xae, 0x46, 0x25, 0x77, 0x30, 0x0d, 0x06, 0x09, 0x2a,
                        0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09,
                        0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55,
                        0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x49, 0x6e, 0x63,
                        0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77, 0x77, 0x77, 0x2e, 0x64,
                        0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06,
                        0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x48,
                        0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x56,
                        0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x30, 0x36, 0x31, 0x31,
                        0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x17, 0x0d, 0x33, 0x31, 0x31, 0x31, 0x31,
                        0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03,
                        0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a,
                        0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19,
                        0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67,
                        0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06, 0x03, 0x55,
                        0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65, 0x72, 0x74, 0x20, 0x48, 0x69, 0x67,
                        0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x56, 0x20, 0x52,
                        0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86,
                        0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82,
                        0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xc6, 0xcc, 0xe5, 0x73, 0xe6, 0xfb, 0xd4, 0xbb, 0xe5,
                        0x2d, 0x2d, 0x32, 0xa6, 0xdf, 0xe5, 0x81, 0x3f, 0xc9, 0xcd, 0x25, 0x49, 0xb6, 0x71, 0x2a, 0xc3,
                        0xd5, 0x94, 0x34, 0x67, 0xa2, 0x0a, 0x1c, 0xb0, 0x5f, 0x69, 0xa6, 0x40, 0xb1, 0xc4, 0xb7, 0xb2,
                        0x8f, 0xd0, 0x98, 0xa4, 0xa9, 0x41, 0x59, 0x3a, 0xd3, 0xdc, 0x94, 0xd6, 0x3c, 0xdb, 0x74, 0x38,
                        0xa4, 0x4a, 0xcc, 0x4d, 0x25, 0x82, 0xf7, 0x4a, 0xa5, 0x53, 0x12, 0x38, 0xee, 0xf3, 0x49, 0x6d,
                        0x71, 0x91, 0x7e, 0x63, 0xb6, 0xab, 0xa6, 0x5f, 0xc3, 0xa4, 0x84, 0xf8, 0x4f, 0x62, 0x51, 0xbe,
                        0xf8, 0xc5, 0xec, 0xdb, 0x38, 0x92, 0xe3, 0x06, 0xe5, 0x08, 0x91, 0x0c, 0xc4, 0x28, 0x41, 0x55,
                        0xfb, 0xcb, 0x5a, 0x89, 0x15, 0x7e, 0x71, 0xe8, 0x35, 0xbf, 0x4d, 0x72, 0x09, 0x3d, 0xbe, 0x3a,
                        0x38, 0x50, 0x5b, 0x77, 0x31, 0x1b, 0x8d, 0xb3, 0xc7, 0x24, 0x45, 0x9a, 0xa7, 0xac, 0x6d, 0x00,
                        0x14, 0x5a, 0x04, 0xb7, 0xba, 0x13, 0xeb, 0x51, 0x0a, 0x98, 0x41, 0x41, 0x22, 0x4e, 0x65, 0x61,
                        0x87, 0x81, 0x41, 0x50, 0xa6, 0x79, 0x5c, 0x89, 0xde, 0x19, 0x4a, 0x57, 0xd5, 0x2e, 0xe6, 0x5d,
                        0x1c, 0x53, 0x2c, 0x7e, 0x98, 0xcd, 0x1a, 0x06, 0x16, 0xa4, 0x68, 0x73, 0xd0, 0x34, 0x04, 0x13,
                        0x5c, 0xa1, 0x71, 0xd3, 0x5a, 0x7c, 0x55, 0xdb, 0x5e, 0x64, 0xe1, 0x37, 0x87, 0x30, 0x56, 0x04,
                        0xe5, 0x11, 0xb4, 0x29, 0x80, 0x12, 0xf1, 0x79, 0x39, 0x88, 0xa2, 0x02, 0x11, 0x7c, 0x27, 0x66,
                        0xb7, 0x88, 0xb7, 0x78, 0xf2, 0xca, 0x0a, 0xa8, 0x38, 0xab, 0x0a, 0x64, 0xc2, 0xbf, 0x66, 0x5d,
                        0x95, 0x84, 0xc1, 0xa1, 0x25, 0x1e, 0x87, 0x5d, 0x1a, 0x50, 0x0b, 0x20, 0x12, 0xcc, 0x41, 0xbb,
                        0x6e, 0x0b, 0x51, 0x38, 0xb8, 0x4b, 0xcb, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x63, 0x30, 0x61,
                        0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86,
                        0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01,
                        0xff, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xb1, 0x3e, 0xc3, 0x69,
                        0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef, 0x63, 0x64, 0x2b, 0xc3,
                        0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xb1, 0x3e, 0xc3,
                        0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef, 0x63, 0x64, 0x2b,
                        0xc3,
                      },
                      RawSubjectPublicKeyInfo: []uint8{
                        0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01,
                        0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01,
                        0x00, 0xc6, 0xcc, 0xe5, 0x73, 0xe6, 0xfb, 0xd4, 0xbb, 0xe5, 0x2d, 0x2d, 0x32, 0xa6, 0xdf, 0xe5,
                        0x81, 0x3f, 0xc9, 0xcd, 0x25, 0x49, 0xb6, 0x71, 0x2a, 0xc3, 0xd5, 0x94, 0x34, 0x67, 0xa2, 0x0a,
                        0x1c, 0xb0, 0x5f, 0x69, 0xa6, 0x40, 0xb1, 0xc4, 0xb7, 0xb2, 0x8f, 0xd0, 0x98, 0xa4, 0xa9, 0x41,
                        0x59, 0x3a, 0xd3, 0xdc, 0x94, 0xd6, 0x3c, 0xdb, 0x74, 0x38, 0xa4, 0x4a, 0xcc, 0x4d, 0x25, 0x82,
                        0xf7, 0x4a, 0xa5, 0x53, 0x12, 0x38, 0xee, 0xf3, 0x49, 0x6d, 0x71, 0x91, 0x7e, 0x63, 0xb6, 0xab,
                        0xa6, 0x5f, 0xc3, 0xa4, 0x84, 0xf8, 0x4f, 0x62, 0x51, 0xbe, 0xf8, 0xc5, 0xec, 0xdb, 0x38, 0x92,
                        0xe3, 0x06, 0xe5, 0x08, 0x91, 0x0c, 0xc4, 0x28, 0x41, 0x55, 0xfb, 0xcb, 0x5a, 0x89, 0x15, 0x7e,
                        0x71, 0xe8, 0x35, 0xbf, 0x4d, 0x72, 0x09, 0x3d, 0xbe, 0x3a, 0x38, 0x50, 0x5b, 0x77, 0x31, 0x1b,
                        0x8d, 0xb3, 0xc7, 0x24, 0x45, 0x9a, 0xa7, 0xac, 0x6d, 0x00, 0x14, 0x5a, 0x04, 0xb7, 0xba, 0x13,
                        0xeb, 0x51, 0x0a, 0x98, 0x41, 0x41, 0x22, 0x4e, 0x65, 0x61, 0x87, 0x81, 0x41, 0x50, 0xa6, 0x79,
                        0x5c, 0x89, 0xde, 0x19, 0x4a, 0x57, 0xd5, 0x2e, 0xe6, 0x5d, 0x1c, 0x53, 0x2c, 0x7e, 0x98, 0xcd,
                        0x1a, 0x06, 0x16, 0xa4, 0x68, 0x73, 0xd0, 0x34, 0x04, 0x13, 0x5c, 0xa1, 0x71, 0xd3, 0x5a, 0x7c,
                        0x55, 0xdb, 0x5e, 0x64, 0xe1, 0x37, 0x87, 0x30, 0x56, 0x04, 0xe5, 0x11, 0xb4, 0x29, 0x80, 0x12,
                        0xf1, 0x79, 0x39, 0x88, 0xa2, 0x02, 0x11, 0x7c, 0x27, 0x66, 0xb7, 0x88, 0xb7, 0x78, 0xf2, 0xca,
                        0x0a, 0xa8, 0x38, 0xab, 0x0a, 0x64, 0xc2, 0xbf, 0x66, 0x5d, 0x95, 0x84, 0xc1, 0xa1, 0x25, 0x1e,
                        0x87, 0x5d, 0x1a, 0x50, 0x0b, 0x20, 0x12, 0xcc, 0x41, 0xbb, 0x6e, 0x0b, 0x51, 0x38, 0xb8, 0x4b,
                        0xcb, 0x02, 0x03, 0x01, 0x00, 0x01,
                      },
                      RawSubject: []uint8{
                        0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                        0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                        0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                        0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                        0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69,
                        0x43, 0x65, 0x72, 0x74, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61,
                        0x6e, 0x63, 0x65, 0x20, 0x45, 0x56, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41,
                      },
                      RawIssuer: []uint8{
                        0x30, 0x6c, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
                        0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0c, 0x44, 0x69, 0x67, 0x69, 0x43, 0x65,
                        0x72, 0x74, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13,
                        0x10, 0x77, 0x77, 0x77, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x63, 0x6f,
                        0x6d, 0x31, 0x2b, 0x30, 0x29, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x22, 0x44, 0x69, 0x67, 0x69,
                        0x43, 0x65, 0x72, 0x74, 0x20, 0x48, 0x69, 0x67, 0x68, 0x20, 0x41, 0x73, 0x73, 0x75, 0x72, 0x61,
                        0x6e, 0x63, 0x65, 0x20, 0x45, 0x56, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41,
                      },
                      Signature: []uint8{
                        0x1c, 0x1a, 0x06, 0x97, 0xdc, 0xd7, 0x9c, 0x9f, 0x3c, 0x88, 0x66, 0x06, 0x08, 0x57, 0x21, 0xdb,
                        0x21, 0x47, 0xf8, 0x2a, 0x67, 0xaa, 0xbf, 0x18, 0x32, 0x76, 0x40, 0x10, 0x57, 0xc1, 0x8a, 0xf3,
                        0x7a, 0xd9, 0x11, 0x65, 0x8e, 0x35, 0xfa, 0x9e, 0xfc, 0x45, 0xb5, 0x9e, 0xd9, 0x4c, 0x31, 0x4b,
                        0xb8, 0x91, 0xe8, 0x43, 0x2c, 0x8e, 0xb3, 0x78, 0xce, 0xdb, 0xe3, 0x53, 0x79, 0x71, 0xd6, 0xe5,
                        0x21, 0x94, 0x01, 0xda, 0x55, 0x87, 0x9a, 0x24, 0x64, 0xf6, 0x8a, 0x66, 0xcc, 0xde, 0x9c, 0x37,
                        0xcd, 0xa8, 0x34, 0xb1, 0x69, 0x9b, 0x23, 0xc8, 0x9e, 0x78, 0x22, 0x2b, 0x70, 0x43, 0xe3, 0x55,
                        0x47, 0x31, 0x61, 0x19, 0xef, 0x58, 0xc5, 0x85, 0x2f, 0x4e, 0x30, 0xf6, 0xa0, 0x31, 0x16, 0x23,
                        0xc8, 0xe7, 0xe2, 0x65, 0x16, 0x33, 0xcb, 0xbf, 0x1a, 0x1b, 0xa0, 0x3d, 0xf8, 0xca, 0x5e, 0x8b,
                        0x31, 0x8b, 0x60, 0x08, 0x89, 0x2d, 0x0c, 0x06, 0x5c, 0x52, 0xb7, 0xc4, 0xf9, 0x0a, 0x98, 0xd1,
                        0x15, 0x5f, 0x9f, 0x12, 0xbe, 0x7c, 0x36, 0x63, 0x38, 0xbd, 0x44, 0xa4, 0x7f, 0xe4, 0x26, 0x2b,
                        0x0a, 0xc4, 0x97, 0x69, 0x0d, 0xe9, 0x8c, 0xe2, 0xc0, 0x10, 0x57, 0xb8, 0xc8, 0x76, 0x12, 0x91,
                        0x55, 0xf2, 0x48, 0x69, 0xd8, 0xbc, 0x2a, 0x02, 0x5b, 0x0f, 0x44, 0xd4, 0x20, 0x31, 0xdb, 0xf4,
                        0xba, 0x70, 0x26, 0x5d, 0x90, 0x60, 0x9e, 0xbc, 0x4b, 0x17, 0x09, 0x2f, 0xb4, 0xcb, 0x1e, 0x43,
                        0x68, 0xc9, 0x07, 0x27, 0xc1, 0xd2, 0x5c, 0xf7, 0xea, 0x21, 0xb9, 0x68, 0x12, 0x9c, 0x3c, 0x9c,
                        0xbf, 0x9e, 0xfc, 0x80, 0x5c, 0x9b, 0x63, 0xcd, 0xec, 0x47, 0xaa, 0x25, 0x27, 0x67, 0xa0, 0x37,
                        0xf3, 0x00, 0x82, 0x7d, 0x54, 0xd7, 0xa9, 0xf8, 0xe9, 0x2e, 0x13, 0xa3, 0x77, 0xe8, 0x1f, 0x4a,
                      },
                      SignatureAlgorithm: 3,
                      PublicKeyAlgorithm: 1,
                      PublicKey:          &rsa.PublicKey{
                        N: &big.Int{
                          neg: false,
                          abs: big.nat{
                            0xbb6e0b5138b84bcb,
                            0x5d1a500b2012cc41,
                            0x5d9584c1a1251e87,
                            0xa838ab0a64c2bf66,
                            0x66b788b778f2ca0a,
                            0x793988a202117c27,
                            0x4e511b4298012f1,
                            0xdb5e64e137873056,
                            0x135ca171d35a7c55,
                            0x616a46873d03404,
                            0x5d1c532c7e98cd1a,
                            0x89de194a57d52ee6,
                            0x6187814150a6795c,
                            0x510a984141224e65,
                            0x145a04b7ba13eb,
                            0xb3c724459aa7ac6d,
                            0x3a38505b77311b8d,
                            0xe835bf4d72093dbe,
                            0x55fbcb5a89157e71,
                            0x6e508910cc42841,
                            0xbef8c5ecdb3892e3,
                            0x5fc3a484f84f6251,
                            0x6d71917e63b6aba6,
                            0x4aa5531238eef349,
                            0x38a44acc4d2582f7,
                            0x3ad3dc94d63cdb74,
                            0xb28fd098a4a94159,
                            0xb05f69a640b1c4b7,
                            0xc3d5943467a20a1c,
                            0x3fc9cd2549b6712a,
                            0xe52d2d32a6dfe581,
                            0xc6cce573e6fbd4bb,
                          },
                        },
                        E: 65537,
                      },
                      Version:      3,
                      SerialNumber: &big.Int{
                        neg: false,
                        abs: big.nat{
                          0x8f0b79f2ae462577,
                          0x2ac5c266a0b409b,
                        },
                      },
                      Issuer: pkix.Name{
                        Country: []string{
                          "US",
                        },
                        Organization: []string{
                          "DigiCert Inc",
                        },
                        OrganizationalUnit: []string{
                          "www.digicert.com",
                        },
                        Locality:      []string{},
                        Province:      []string{},
                        StreetAddress: []string{},
                        PostalCode:    []string{},
                        SerialNumber:  "",
                        CommonName:    "DigiCert High Assurance EV Root CA",
                        Names:         []pkix.AttributeTypeAndValue{
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              6,
                            },
                            Value: "US",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              10,
                            },
                            Value: "DigiCert Inc",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              11,
                            },
                            Value: "www.digicert.com",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              3,
                            },
                            Value: "DigiCert High Assurance EV Root CA",
                          },
                        },
                        ExtraNames: []pkix.AttributeTypeAndValue{},
                      },
                      Subject: pkix.Name{
                        Country: []string{
                          "US",
                        },
                        Organization: []string{
                          "DigiCert Inc",
                        },
                        OrganizationalUnit: []string{
                          "www.digicert.com",
                        },
                        Locality:      []string{},
                        Province:      []string{},
                        StreetAddress: []string{},
                        PostalCode:    []string{},
                        SerialNumber:  "",
                        CommonName:    "DigiCert High Assurance EV Root CA",
                        Names:         []pkix.AttributeTypeAndValue{
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              6,
                            },
                            Value: "US",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              10,
                            },
                            Value: "DigiCert Inc",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              11,
                            },
                            Value: "www.digicert.com",
                          },
                          pkix.AttributeTypeAndValue{
                            Type: asn1.ObjectIdentifier{
                              2,
                              5,
                              4,
                              3,
                            },
                            Value: "DigiCert High Assurance EV Root CA",
                          },
                        },
                        ExtraNames: []pkix.AttributeTypeAndValue{},
                      },
                      NotBefore:  (unexported time.Time),
                      NotAfter:   (unexported time.Time),
                      KeyUsage:   97,
                      Extensions: []pkix.Extension{
                        pkix.Extension{
                          Id: asn1.ObjectIdentifier{
                            2,
                            5,
                            29,
                            15,
                          },
                          Critical: true,
                          Value:    []uint8{
                            0x03, 0x02, 0x01, 0x86,
                          },
                        },
                        pkix.Extension{
                          Id: asn1.ObjectIdentifier{
                            2,
                            5,
                            29,
                            19,
                          },
                          Critical: true,
                          Value:    []uint8{
                            0x30, 0x03, 0x01, 0x01, 0xff,
                          },
                        },
                        pkix.Extension{
                          Id: asn1.ObjectIdentifier{
                            2,
                            5,
                            29,
                            14,
                          },
                          Critical: false,
                          Value:    []uint8{
                            0x04, 0x14, 0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08,
                            0x02, 0xef, 0x63, 0x64, 0x2b, 0xc3,
                          },
                        },
                        pkix.Extension{
                          Id: asn1.ObjectIdentifier{
                            2,
                            5,
                            29,
                            35,
                          },
                          Critical: false,
                          Value:    []uint8{
                            0x30, 0x16, 0x80, 0x14, 0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26,
                            0x1a, 0x08, 0x02, 0xef, 0x63, 0x64, 0x2b, 0xc3,
                          },
                        },
                      },
                      ExtraExtensions:             []pkix.Extension{},
                      UnhandledCriticalExtensions: []asn1.ObjectIdentifier{},
                      ExtKeyUsage:                 []x509.ExtKeyUsage{},
                      UnknownExtKeyUsage:          []asn1.ObjectIdentifier{},
                      BasicConstraintsValid:       true,
                      IsCA:                        true,
                      MaxPathLen:                  -1,
                      MaxPathLenZero:              false,
                      SubjectKeyId:                []uint8{
                        0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef,
                        0x63, 0x64, 0x2b, 0xc3,
                      },
                      AuthorityKeyId: []uint8{
                        0xb1, 0x3e, 0xc3, 0x69, 0x03, 0xf8, 0xbf, 0x47, 0x01, 0xd4, 0x98, 0x26, 0x1a, 0x08, 0x02, 0xef,
                        0x63, 0x64, 0x2b, 0xc3,
                      },
                      OCSPServer:                  []string{},
                      IssuingCertificateURL:       []string{},
                      DNSNames:                    []string{},
                      EmailAddresses:              []string{},
                      IPAddresses:                 []net.IP{},
                      PermittedDNSDomainsCritical: false,
                      PermittedDNSDomains:         []string{},
                      CRLDistributionPoints:       []string{},
                      PolicyIdentifiers:           []asn1.ObjectIdentifier{},
                    },
                  },
                },
                serverName:    "",
                firstFinished: [12]uint8{
                  0x08, 0x00, 0x70, 0x0a, 0xc0, 0xf9, 0xbf, 0x84, 0x73, 0xb7, 0x14, 0x0e,
                },
                clientProtocol:         "",
                clientProtocolFallback: false,
                in:                     tls.halfConn{
                  Mutex: sync.Mutex{
                    state: 0,
                    sema:  0x00000000,
                  },
                  err:     nil,
                  version: 0x0303,
                  cipher:  &tls.fixedNonceAEAD{
                    sealNonce: []uint8{
                      0xd6, 0x51, 0x7d, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    },
                    openNonce: []uint8{
                      0xd6, 0x51, 0x7d, 0xcb, 0x23, 0xa4, 0xf1, 0xcd, 0xed, 0xc8, 0x6a, 0x27,
                    },
                    aead: &aes.gcmAsm{
                      ks: []uint32{
                        0x405ad3bd, 0x003b0ee6, 0x6e9c1825, 0xe32613c1, 0x384b24c1, 0x38702a27, 0x56ec3202, 0xb5ca21c3,
                        0x169e503e, 0x2eee7a19, 0x7802481b, 0xcdc869d8, 0x7723b8c3, 0x59cdc2da, 0x21cf8ac1, 0xec07e319,
                        0xa3ed7dda, 0xfa20bf00, 0xdbef35c1, 0x37e8d6d8, 0xc277e63c, 0x3857593c, 0xe3b86cfd, 0xd450ba25,
                        0xfd3fb5e8, 0xc568ecd4, 0x26d08029, 0xf2803a0c, 0x03b67828, 0xc6de94fc, 0xe00e14d5, 0x128e2ed9,
                        0x367f6199, 0xf0a1f565, 0x10afe1b0, 0x0221cf69, 0xcf089c08, 0x3fa9696d, 0x2f0688dd, 0x2d2747b4,
                        0x42d0509e, 0x7d7939f3, 0x527fb12e, 0x7f58f69a,
                      },
                      productTable: [256]uint8{
                        0x9f, 0xad, 0x0b, 0x6e, 0x2f, 0x3c, 0x4a, 0x08, 0x65, 0x28, 0xe4, 0xfa, 0x13, 0x7c, 0x71, 0xc4,
                        0xfa, 0x85, 0xef, 0x94, 0x3c, 0x40, 0x3b, 0xcc, 0xfa, 0x85, 0xef, 0x94, 0x3c, 0x40, 0x3b, 0xcc,
                        0x1b, 0x09, 0x3e, 0xb8, 0xf5, 0x86, 0x6a, 0xa2, 0x2b, 0xff, 0xd2, 0xbb, 0xd1, 0x9e, 0x76, 0x44,
                        0x30, 0xf6, 0xec, 0x03, 0x24, 0x18, 0x1c, 0xe6, 0x30, 0xf6, 0xec, 0x03, 0x24, 0x18, 0x1c, 0xe6,
                        0x00, 0x7f, 0xcd, 0x3e, 0xd3, 0x82, 0xde, 0x98, 0xce, 0xf3, 0x3e, 0x8d, 0x13, 0x0e, 0xac, 0x7a,
                        0xce, 0x8c, 0xf3, 0xb3, 0xc0, 0x8c, 0x72, 0xe2, 0xce, 0x8c, 0xf3, 0xb3, 0xc0, 0x8c, 0x72, 0xe2,
                        0x75, 0xbd, 0x10, 0x7a, 0x2b, 0xa2, 0xe0, 0x86, 0x72, 0x75, 0x2b, 0x45, 0xc4, 0xce, 0xb7, 0x1b,
                        0x07, 0xc8, 0x3b, 0x3f, 0xef, 0x6c, 0x57, 0x9d, 0x07, 0xc8, 0x3b, 0x3f, 0xef, 0x6c, 0x57, 0x9d,
                        0xce, 0xf8, 0xf0, 0xf9, 0x2d, 0x3f, 0x6e, 0x2d, 0x9e, 0x25, 0x6b, 0x0d, 0xb0, 0xea, 0x3c, 0x6a,
                        0x50, 0xdd, 0x9b, 0xf4, 0x9d, 0xd5, 0x52, 0x47, 0x50, 0xdd, 0x9b, 0xf4, 0x9d, 0xd5, 0x52, 0x47,
                        0x49, 0xcd, 0x59, 0xa3, 0x87, 0xf1, 0xb5, 0x56, 0x1d, 0x40, 0xf8, 0x3c, 0x9e, 0x3f, 0xca, 0x6d,
                        0x54, 0x8d, 0xa1, 0x9f, 0x19, 0xce, 0x7f, 0x3b, 0x54, 0x8d, 0xa1, 0x9f, 0x19, 0xce, 0x7f, 0x3b,
                        0xeb, 0xc1, 0x28, 0x46, 0x14, 0xd4, 0xe4, 0x28, 0xd4, 0x7d, 0x4f, 0x5f, 0x28, 0x87, 0x12, 0x4c,
                        0x3f, 0xbc, 0x67, 0x19, 0x3c, 0x53, 0xf6, 0x64, 0x3f, 0xbc, 0x67, 0x19, 0x3c, 0x53, 0xf6, 0x64,
                        0xab, 0x45, 0xdb, 0x3e, 0x7f, 0xdd, 0x0d, 0x91, 0xe7, 0x47, 0x50, 0xab, 0x3e, 0xc8, 0xbb, 0x8b,
                        0x4c, 0x02, 0x8b, 0x95, 0x41, 0x15, 0xb6, 0x1a, 0x4c, 0x02, 0x8b, 0x95, 0x41, 0x15, 0xb6, 0x1a,
                      },
                      nonceSize: 12,
                    },
                  },
                  mac: nil,
                  seq: [8]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
                  },
                  bfree: &tls.block{
                    data: []uint8{...},
                    off:  1383,
                    link: (*tls.block)(nil),
                  },
                  additionalData: [13]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x17, 0x03, 0x03, 0x05, 0x5a,
                  },
                  nextCipher:   nil,
                  nextMac:      nil,
                  inDigestBuf:  []uint8{},
                  outDigestBuf: []uint8{},
                },
                out: tls.halfConn{
                  Mutex: sync.Mutex{
                    state: 0,
                    sema:  0x00000000,
                  },
                  err:     nil,
                  version: 0x0303,
                  cipher:  &tls.fixedNonceAEAD{
                    sealNonce: []uint8{
                      0xbc, 0x9d, 0xca, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                    },
                    openNonce: []uint8{
                      0xbc, 0x9d, 0xca, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    },
                    aead: &aes.gcmAsm{
                      ks: []uint32{
                        0x89edc263, 0x955c6aeb, 0x792aa6d8, 0x578fdb24, 0xbfb6b1db, 0x2aeadb30, 0x53c07de8, 0x044fa6cc,
                        0xf44435fd, 0xdeaeeecd, 0x8d6e9325, 0x892135e9, 0xeae3c86f, 0x344d26a2, 0xb923b587, 0x3002806e,
                        0x75e7bfaa, 0x41aa9908, 0xf8892c8f, 0xc88bace1, 0x8d0f822b, 0xcca51b23, 0x342c37ac, 0xfca79b4d,
                        0x6ebfde1f, 0xa21ac53c, 0x9636f290, 0x6a9169dd, 0xafbd5fa6, 0x0da79a9a, 0x9b91680a, 0xf10001d7,
                        0xa11c3c5a, 0xacbba6c0, 0x372aceca, 0xc62acf1d, 0x05a8d9cb, 0xa9137f0b, 0x9e39b1c1, 0x58137edc,
                        0x83c2a40e, 0x2ad1db05, 0xb4e86ac4, 0xecfb1418,
                      },
                      productTable: [256]uint8{
                        0xf1, 0xe2, 0x76, 0x04, 0x67, 0x6f, 0xbe, 0xaf, 0x10, 0xb6, 0x97, 0x88, 0x01, 0xbd, 0xe0, 0x05,
                        0xe1, 0x54, 0xe1, 0x8c, 0x66, 0xd2, 0x5e, 0xaa, 0xe1, 0x54, 0xe1, 0x8c, 0x66, 0xd2, 0x5e, 0xaa,
                        0x84, 0x3f, 0x01, 0x0b, 0x0f, 0x9c, 0x3d, 0xd1, 0x0d, 0xa3, 0x64, 0x5c, 0x49, 0x7e, 0x79, 0xd3,
                        0x89, 0x9c, 0x65, 0x57, 0x46, 0xe2, 0x44, 0x02, 0x89, 0x9c, 0x65, 0x57, 0x46, 0xe2, 0x44, 0x02,
                        0x36, 0x2a, 0x1d, 0x79, 0xc8, 0xce, 0x1c, 0x3a, 0x66, 0x77, 0x99, 0x25, 0x3a, 0xeb, 0x99, 0x90,
                        0x50, 0x5d, 0x84, 0x5c, 0xf2, 0x25, 0x85, 0xaa, 0x50, 0x5d, 0x84, 0x5c, 0xf2, 0x25, 0x85, 0xaa,
                        0xa3, 0x4b, 0x62, 0x46, 0x80, 0xcf, 0x99, 0x36, 0x9b, 0x28, 0xfe, 0xe3, 0xa7, 0x67, 0x84, 0x37,
                        0x38, 0x63, 0x9c, 0xa5, 0x27, 0xa8, 0x1d, 0x01, 0x38, 0x63, 0x9c, 0xa5, 0x27, 0xa8, 0x1d, 0x01,
                        0xad, 0x98, 0xf4, 0x70, 0x6c, 0xee, 0x25, 0x77, 0x76, 0xfa, 0x35, 0x7e, 0x3e, 0x1e, 0xc6, 0xee,
                        0xdb, 0x62, 0xc1, 0x0e, 0x52, 0xf0, 0xe3, 0x99, 0xdb, 0x62, 0xc1, 0x0e, 0x52, 0xf0, 0xe3, 0x99,
                        0x67, 0x04, 0x16, 0xb3, 0x42, 0x5f, 0x46, 0x85, 0x52, 0xd1, 0x35, 0xac, 0x19, 0x45, 0x71, 0xac,
                        0x35, 0xd5, 0x23, 0x1f, 0x5b, 0x1a, 0x37, 0x29, 0x35, 0xd5, 0x23, 0x1f, 0x5b, 0x1a, 0x37, 0x29,
                        0x3a, 0x53, 0xd6, 0x41, 0x2f, 0xbe, 0x62, 0x10, 0xe4, 0xb4, 0x97, 0x12, 0xf6, 0x06, 0x35, 0x06,
                        0xde, 0xe7, 0x41, 0x53, 0xd9, 0xb8, 0x57, 0x16, 0xde, 0xe7, 0x41, 0x53, 0xd9, 0xb8, 0x57, 0x16,
                        0x46, 0xcb, 0x46, 0xf5, 0x3f, 0x35, 0x50, 0x9b, 0x31, 0x30, 0x86, 0x47, 0xca, 0x68, 0xd6, 0x9d,
                        0x77, 0xfb, 0xc0, 0xb2, 0xf5, 0x5d, 0x86, 0x06, 0x77, 0xfb, 0xc0, 0xb2, 0xf5, 0x5d, 0x86, 0x06,
                      },
                      nonceSize: 12,
                    },
                  },
                  mac: nil,
                  seq: [8]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
                  },
                  bfree: &tls.block{
                    data: []uint8{
                      0x17, 0x03, 0x03, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x47, 0xd2, 0xa5,
                      0xf6, 0xde, 0xe8, 0x2d, 0x30, 0x2a, 0xe8, 0xb5, 0x4b, 0x75, 0x68, 0x89, 0x61, 0x3f, 0xcd, 0x34,
                      0xfe, 0x13, 0xee, 0x86, 0xf5, 0x84, 0xff, 0xaf, 0x99, 0x94, 0x05, 0xd6, 0x4d, 0xd5, 0xb6, 0x25,
                      0x83, 0xef, 0x69, 0x90, 0x5e, 0xf7, 0xe8, 0xac, 0xce, 0x9f, 0x13, 0x83, 0x73, 0x85, 0x0e, 0xf0,
                      0x23, 0x69, 0x26, 0xe7, 0xc0, 0xfa, 0x1c, 0xab, 0xe6, 0x54, 0x2d, 0xae, 0xb6, 0x42, 0x85, 0x52,
                      0xe4, 0x14, 0xa6, 0xb4, 0x0e, 0x91, 0x6b, 0x57, 0x65, 0xb9, 0xc0, 0x00, 0xc2, 0x48, 0xea, 0xe2,
                      0x46, 0xa3, 0x3e, 0x55, 0xb8, 0x29, 0xdd, 0x3b, 0x1a, 0xb5, 0xdb, 0x0d, 0xcf, 0x5b, 0xb7, 0x9c,
                      0x34, 0x29, 0x18, 0x72, 0x95, 0xae, 0xed, 0x01, 0xd0, 0x28, 0x68, 0x93, 0x81, 0x3d, 0x79, 0x94,
                      0xed, 0x5e, 0x22, 0x26, 0x30, 0xd6, 0x50, 0x30, 0x54, 0x2a, 0x18, 0x8d, 0xcc, 0xd9, 0x7b, 0xa7,
                      0xa6, 0xdc, 0x12, 0xef, 0x91, 0x27, 0x32, 0x3b, 0x91, 0xe0, 0x81, 0xdb, 0xee, 0x78, 0x80, 0x40,
                      0x0f, 0x14, 0xa5, 0x78, 0x4b, 0x75, 0xae, 0xb3, 0x7a, 0xe0, 0xdd, 0x32, 0x8d, 0x0d, 0x90, 0xb2,
                      0x93, 0x7c, 0xb8, 0x1d, 0xb1, 0x3d, 0xe0, 0xcb, 0x74, 0x72, 0x8a, 0xb0, 0xa9, 0x79, 0x10, 0xc2,
                      0xad, 0xa8, 0x4c, 0xe3, 0x78, 0x2b, 0x41, 0x3b, 0x04, 0x6e, 0x30, 0xc6, 0x6f, 0x24, 0x8e, 0x18,
                      0x36, 0x70, 0xae, 0xfe, 0xfa, 0x67, 0x4a, 0x26, 0xfb, 0x73, 0x3f, 0x7b, 0x35, 0xe0, 0x92, 0x9a,
                      0xe1, 0xe8, 0x54, 0xc8, 0x04, 0xec, 0x2f, 0x33, 0x72, 0x5f, 0x39, 0xb9, 0xf8, 0x98, 0xaf, 0xb9,
                    },
                    off:  0,
                    link: (*tls.block)(nil),
                  },
                  additionalData: [13]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x17, 0x03, 0x03, 0x00, 0xd3,
                  },
                  nextCipher:   nil,
                  nextMac:      nil,
                  inDigestBuf:  []uint8{},
                  outDigestBuf: []uint8{},
                },
                rawInput: &tls.block{
                  data: []uint8{
                    0x17, 0x03, 0x03, 0x05, 0x72, 0x23, 0xa4, 0xf1, 0xcd, 0xed, 0xc8, 0x6a, 0x28, 0x1d, 0x02, 0xaf,
                    0xe6, 0x2f, 0xc9, 0xc4, 0x0e, 0xf4, 0x90, 0x92, 0x06, 0xee, 0x5a, 0x5c, 0xd8, 0xb4, 0x1a, 0x8a,
                    0x1b, 0x70, 0xa4, 0x4e, 0xa4, 0xce, 0x76, 0x23, 0x6e, 0x4e, 0x39, 0x79, 0x21, 0xaa, 0x28, 0xaf,
                    0x8a, 0x86, 0xcd, 0xb0, 0x3c, 0x01, 0xed, 0xcc, 0x7f, 0x55, 0xdc, 0x26, 0xa0, 0xac, 0x1d, 0xf4,
                    0x82, 0xc2, 0x0c, 0xe6, 0x13, 0x10, 0x50, 0x59, 0x36, 0xc6, 0x19, 0xce, 0x9b, 0xdc, 0x8a, 0xe4,
                    0xd5, 0xce, 0x93, 0xf0, 0x77, 0xf7, 0xab, 0x32, 0x4f, 0xcd, 0xee, 0x25, 0xe8, 0x9e, 0x0b, 0xbe,
                    0x8c, 0x89, 0xf3, 0x08, 0xef, 0xa8, 0xe0, 0x69, 0x99, 0x55, 0x05, 0x01, 0xd6, 0xe8, 0x3f, 0xad,
                    0x0d, 0xe6, 0xc9, 0x70, 0x37, 0x82, 0x29, 0xeb, 0x4c, 0x62, 0xea, 0x1f, 0x40, 0x94, 0xac, 0x3e,
                    0xa3, 0x3b, 0x01, 0xb2, 0xf7, 0x4f, 0x0e, 0xbf, 0x97, 0xbf, 0x0d, 0x18, 0x32, 0x28, 0x44, 0xea,
                    0x6e, 0xc8, 0x6c, 0xdd, 0xc1, 0x2c, 0xf5, 0x77, 0xd0, 0xeb, 0x63, 0x65, 0xf5, 0xae, 0x90, 0xfa,
                    0x0c, 0xd3, 0xc3, 0x20, 0x0a, 0x7e, 0x41, 0x4e, 0x47, 0x9e, 0x38, 0x90, 0x43, 0xe0, 0x74, 0x05,
                    0x0b, 0x26, 0x4d, 0x9e, 0x6a, 0x80, 0x3c, 0x78, 0x53, 0xcf, 0xa9, 0x13, 0x3a, 0xcd, 0x94, 0xc1,
                    0xef, 0x1d, 0xd8, 0x8f, 0x0e, 0x6a, 0x19, 0xd0, 0x0e, 0x2d, 0xb8, 0xc1, 0x51, 0x7d, 0x39, 0x5b,
                    0xdb, 0x7d, 0x7b, 0x0b, 0xea, 0x21, 0xc9, 0x69, 0xeb, 0x25, 0x7e, 0x96, 0x6f, 0x0b, 0x33, 0x16,
                    0x80, 0x0a, 0xf6, 0x18, 0x5e, 0xaf, 0x6b, 0x6c, 0x40, 0xb3, 0x59, 0x9e, 0x71, 0x79, 0x16, 0x5c,
                    0xcd, 0x87, 0xeb, 0xd7, 0xca, 0x02, 0x94, 0x96, 0x51, 0x77, 0x57, 0x86, 0xb0, 0x5b, 0xc7, 0x15,
                    0x7d, 0x21, 0x0e, 0xad, 0xe6, 0x08, 0x93, 0xda, 0x3b, 0x3e, 0x0b, 0x6a, 0xb2, 0x57, 0xe2, 0xb6,
                    0xb1, 0xda, 0x42, 0xaa, 0x18, 0x4e, 0x07, 0x2e, 0x56, 0xdb, 0x7e, 0x5b, 0x97, 0xf3, 0xe5, 0xd8,
                    0x9e, 0x69, 0x99, 0x1f, 0xe4, 0xf1, 0x18, 0xba, 0x56, 0xba, 0xb6, 0xea, 0x38, 0xf6, 0x93, 0x2d,
                    0x75, 0x30, 0x27, 0x49, 0x56, 0x5e, 0xcb, 0xbe, 0xe2, 0xc9, 0x65, 0x52, 0x0a, 0xcc, 0xb4, 0xc9,
                    0xe8, 0xdd, 0x47, 0x93, 0x61, 0x9a, 0x1c, 0xbb, 0x6b, 0x80, 0x9d, 0x03, 0x70, 0xdd, 0x21, 0x0e,
                    0x5c, 0xa5, 0x32, 0x62, 0x92, 0x70, 0x4e, 0x50, 0xd7, 0xd6, 0xa4, 0xd8, 0x4a, 0xb4, 0x2e, 0xab,
                    0xe2, 0x2f, 0x5c, 0x9f, 0x43, 0x02, 0x97, 0x73, 0xe9, 0x33, 0x3c, 0x60, 0xd5, 0x7a, 0xdd, 0xf7,
                    0x6d, 0xb7, 0x19, 0x6b, 0xbe, 0xa9, 0x77, 0xa1, 0xb3, 0x36, 0x0a, 0xd8, 0xf4, 0x17, 0xb7, 0xe7,
                    0xd7, 0x2e, 0x4e, 0x4b, 0x1d, 0x08, 0x8e, 0x46, 0x8b, 0x76, 0xb3, 0x0a, 0xcd, 0x89, 0xe3, 0xfd,
                    0xff, 0xbe, 0x82, 0xc1, 0x57, 0x2f, 0x2f, 0xd5, 0xd1, 0xfb, 0xe1, 0x2d, 0x99, 0x54, 0xd0, 0x1d,
                    0x04, 0x30, 0xb9, 0x1c, 0x3b, 0xed, 0xf4, 0xc4, 0xdc, 0xd2, 0x66, 0xa7, 0x31, 0x2d, 0xd1, 0x6f,
                    0x2d, 0x5a, 0x10, 0x64, 0x92, 0xda, 0x6c, 0xb1, 0x4b, 0xa7, 0x25, 0x32, 0x36, 0xff, 0x17, 0x97,
                    0x1e, 0x49, 0x1d, 0x6d, 0x82, 0x06, 0x44, 0x3f, 0x41, 0x63, 0x9c, 0x01, 0xd2, 0xb0, 0xaa, 0x70,
                    0xbc, 0x52, 0xdd, 0xfb, 0x9b, 0x60, 0xd5, 0x02, 0xc1, 0xbb, 0x28, 0x7e, 0x41, 0xae, 0x5b, 0xfa,
                    0xef, 0xc4, 0x1a, 0x91, 0x4c, 0xe2, 0x40, 0x58, 0x71, 0x4d, 0x60, 0x7b, 0xab, 0x06, 0xaa, 0xb0,
                    0x57, 0xa1, 0x0f, 0x2a, 0x98, 0x01, 0xc4, 0x5e, 0x0e, 0x30, 0x9a, 0x22, 0x02, 0x34, 0x51, 0xba,
                    0xe8, 0x0f, 0x3f, 0x58, 0x48, 0x91, 0xf2, 0x3a, 0x1e, 0x4c, 0xcc, 0xf6, 0x5a, 0xf1, 0x7f, 0xa1,
                    0x39, 0xdd, 0xbe, 0x97, 0x70, 0x01, 0xac, 0x68, 0x66, 0x63, 0xa0, 0x40, 0x76, 0x2a, 0xa3, 0xfe,
                    0x86, 0x66, 0x6a, 0xaa, 0x2f, 0x1d, 0xf4, 0x9e, 0xac, 0x65, 0x19, 0x0f, 0xc2, 0x75, 0xd0, 0x9d,
                    0x24, 0xeb, 0x52, 0x85, 0x18, 0xb2, 0x41, 0x24, 0x74, 0xb4, 0x5e, 0x09, 0xcb, 0xe8, 0xa3, 0x86,
                    0x98, 0x39, 0xf5, 0x8a, 0x62, 0x6a, 0x0e, 0xe0, 0xd4, 0x9b, 0x04, 0xdd, 0xfb, 0x8f, 0x4a, 0x46,
                    0xb9, 0x4e, 0xd9, 0xb9, 0xf3, 0xf2, 0x0a, 0x78, 0xdd, 0xdb, 0x4e, 0x31, 0xa9, 0x36, 0xc6, 0x39,
                    0x26, 0xdc, 0x0d, 0x61, 0x84, 0x7f, 0x08, 0x75, 0x02, 0x2e, 0xd8, 0xbb, 0xa0, 0x3d, 0x2d, 0x2f,
                    0x4a, 0x6d, 0x4a, 0xdd, 0x8e, 0xee, 0xbd, 0xfc, 0x8c, 0x44, 0x88, 0x46, 0xdc, 0x3b, 0x44, 0xb7,
                    0x7b, 0x41, 0x51, 0x2b, 0x0c, 0x36, 0xea, 0x75, 0x56,
                  },
                  off:  5,
                  link: (*tls.block)(nil),
                },
                input: (*tls.block)(nil),
                hand:  bytes.Buffer{
                  buf: []uint8{
                    0x14, 0x00, 0x00, 0x0c, 0xff, 0xac, 0xf0, 0x11, 0x55, 0x34, 0xb7, 0x02, 0x10, 0xd5, 0xdc, 0xc1,
                  },
                  off:       16,
                  runeBytes: [4]uint8{
                    0x00, 0x00, 0x00, 0x00,
                  },
                  bootstrap: [64]uint8{
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  },
                  lastRead: 2,
                },
                activeCall: 0,
                tmp:        [16]uint8{
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                },
              },
              sawEOF: &false,
            },
            r:            1142,
            w:            1370,
            err:          nil,
            lastByte:     10,
            lastRuneSize: -1,
          },
          n:   0x0000000000000000,
          err: nil,
          buf: [2]uint8{
            0x00, 0x00,
          },
        },
        hdr:          &http.Response{...},
        r:            &bufio.Reader{...},
        closing:      false,
        doEarlyClose: false,
        mu:           sync.Mutex{
          state: 0,
          sema:  0x00000000,
        },
        sawEOF:     false,
        closed:     false,
        earlyClose: false,
        onHitEOF:   func() {...},
      },
      zr: nil,
    },
    mu: sync.Mutex{
      state: 0,
      sema:  0x00000000,
    },
    closed:       false,
    rerr:         nil,
    fn:           func(error) error {...},
    earlyCloseFn: func() error {...},
  },
  ContentLength:    -1,
  TransferEncoding: []string{
    "chunked",
  },
  Close:   false,
  Trailer: http.Header{},
  Request: &http.Request{
    Method: "GET",
    URL:    &url.URL{
      Scheme:   "https",
      Opaque:   "",
      User:     (*url.Userinfo)(nil),
      Host:     "api.github.com",
      Path:     "/search/repositories",
      RawPath:  "",
      RawQuery: "q=language:go&sort=stars&order=desc",
      Fragment: "",
    },
    Proto:      "HTTP/1.1",
    ProtoMajor: 1,
    ProtoMinor: 1,
    Header:     {
      "Authorization": []string{
        "token 6a54def2525aa32b003337b31487e321d6a2bb59",
      },
      "User-Agent": []string{
        "Holberton_School",
      },
    },
    Body:             nil,
    ContentLength:    0,
    TransferEncoding: []string{},
    Close:            false,
    Host:             "api.github.com",
    Form:             url.Values{},
    PostForm:         url.Values{},
    MultipartForm:    (*multipart.Form)(nil),
    Trailer:          http.Header{},
    RemoteAddr:       "",
    RequestURI:       "",
    TLS:              (*tls.ConnectionState)(nil),
    Cancel:           (<-chan struct {})(0x0),
  },
  TLS: &tls.ConnectionState{
    Version:                     0x0303,
    HandshakeComplete:           true,
    DidResume:                   false,
    CipherSuite:                 0xc02f,
    NegotiatedProtocol:          "",
    NegotiatedProtocolIsMutual:  true,
    ServerName:                  "",
    PeerCertificates:            []*x509.Certificate{...},
    VerifiedChains:              [][]*x509.Certificate{...},
    SignedCertificateTimestamps: [][]uint8{},
    OCSPResponse:                []uint8{},
    TLSUnique:                   []uint8{
      0x08, 0x00, 0x70, 0x0a, 0xc0, 0xf9, 0xbf, 0x84, 0x73, 0xb7, 0x14, 0x0e,
    },
  },
}
*/
